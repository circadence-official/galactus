{
  "swagger": "2.0",
  "info": {
    "title": "core/eventstore/v1/eventstore.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventStore"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "event id"
        },
        "isPublished": {
          "type": "boolean"
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string",
          "title": "uuid generated in the grpc handler"
        },
        "receivedDate": {
          "type": "string",
          "format": "date-time",
          "title": "the time the event create request was received"
        },
        "publishedDate": {
          "type": "string",
          "format": "date-time",
          "title": "the time the event was been published to it's respective topic/queue"
        },
        "transactionId": {
          "type": "string",
          "title": "uuid generated by the caller(ex. commandhandler) and received by the client (ex. graphql)"
        },
        "publish": {
          "type": "boolean",
          "title": "whether or not to publish the event to the messagebus"
        },
        "eventType": {
          "type": "string",
          "format": "int64",
          "title": "map of all event types\nNOTE: this is simply an integer to keep the eventstore from depending on changing types"
        },
        "aggregateType": {
          "type": "string",
          "format": "int64",
          "title": "the integer identifier (enum value) of the aggregate type this event belongs to\nNOTE: this is simply an integer to keep the eventstore from depending on changing types"
        },
        "aggregateId": {
          "type": "string",
          "title": "the id of the aggregate that this event belongs to"
        },
        "eventData": {
          "type": "string",
          "title": "data representing the state of the system that this event encapsulates\nit is saved as a json string so that the eventstore can be completey agnostic to the\nthe data structure of the system (and thus be a static service)\nthis data MUST be able to be unmarshalled into a Proto message type"
        }
      },
      "title": "Event - Is the model of the event store"
    }
  }
}
